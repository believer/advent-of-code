// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Caml_format = require("bs-platform/lib/js/caml_format.js");

function flatten(input) {
  return Belt_Array.reduce(input, /* array */[], Belt_Array.concat);
}

function parseNumber(v) {
  return Caml_format.caml_int_of_string(v.replace((/\+/g), ""));
}

function removeDuplicates(row) {
  return Belt_Array.reduce(row, /* array */[], (function (acc, curr) {
                var match = acc.includes(curr);
                if (match) {
                  return acc;
                } else {
                  return Belt_Array.concat(acc, /* array */[curr]);
                }
              }));
}

function sortFloats(param, param$1) {
  return (param$1[2] * 100 | 0) - (param[2] * 100 | 0) | 0;
}

function join(arr, value) {
  return arr.join(value);
}

function sortInPlaceWith(arr, value) {
  return arr.sort(Curry.__2(value));
}

function range(start, end_) {
  if (start >= end_) {
    return /* [] */0;
  } else {
    return /* :: */[
            start,
            range(start + 1 | 0, end_)
          ];
  }
}

function dateAsInt(date) {
  return new Date(date).getTime() | 0;
}

exports.flatten = flatten;
exports.parseNumber = parseNumber;
exports.removeDuplicates = removeDuplicates;
exports.sortFloats = sortFloats;
exports.join = join;
exports.sortInPlaceWith = sortInPlaceWith;
exports.range = range;
exports.dateAsInt = dateAsInt;
/* No side effect */
