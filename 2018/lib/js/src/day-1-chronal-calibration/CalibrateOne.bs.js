// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE
'use strict';

var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");
var Utils$AdventOfCode2018 = require("../utils/Utils.bs.js");

function deviceFrequency(input, $staropt$star, $staropt$star$1, $staropt$star$2, param) {
  var result = $staropt$star !== undefined ? $staropt$star : 0;
  var duplicate = $staropt$star$1 !== undefined ? Js_primitive.valFromOption($staropt$star$1) : undefined;
  var seenFrequencies = $staropt$star$2 !== undefined ? $staropt$star$2 : /* array */[0];
  return Belt_Array.reduce(Belt_Array.map(input.split(", "), Utils$AdventOfCode2018.parseNumber), /* record */[
              /* duplicate */duplicate,
              /* seenFrequencies */seenFrequencies,
              /* result */result
            ], (function (acc, curr) {
                var result = acc[/* result */2] + curr | 0;
                var hasValue = Belt_Array.some(acc[/* seenFrequencies */1], (function (v) {
                        return v === result;
                      }));
                var seenFrequencies = Belt_Array.concat(acc[/* seenFrequencies */1], /* array */[result]);
                var match = acc[/* duplicate */0];
                if (match !== undefined || !hasValue) {
                  return /* record */[
                          /* duplicate */acc[/* duplicate */0],
                          /* seenFrequencies */seenFrequencies,
                          /* result */result
                        ];
                } else {
                  return /* record */[
                          /* duplicate */result,
                          /* seenFrequencies */seenFrequencies,
                          /* result */result
                        ];
                }
              }));
}

exports.deviceFrequency = deviceFrequency;
/* No side effect */
